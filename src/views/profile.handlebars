<article class="pico-background-violet-100">
  <header class="pico-background-violet-100">
    <h1>Te damos la bienvenida <span class="pico-color-indigo-600"> {{user.first_name}}</span> 游때
    </h1>
  </header>

  <p><strong>Id: </strong>{{user.id}}</p>
  <p><strong>Apellido:</strong> {{user.last_name}}</p>
  <p><strong>Correo:</strong> {{user.email}}</p>
  <p><strong>Edad:</strong> {{user.age}}</p>
  <p><strong>carrito:</strong> {{user.cart}}</p>


  <footer>
    <a href="/api/session/logout" role="button">Salir</a>
  </footer>
</article>



<div class="delete">
  <article class="pico-background-violet-100">
    <h3>Borrar producto</h3>

    <form id="deleteForm" action='api/product/:uid' method='POST' class="form-delete">

      <label for="ID">ID:</label>
      <input type="number" name="deleteId" required>

      <input type="submit" id="button" value="Borrar">
    </form>

  </article>



</div>

<div class="create">
  <article class="pico-background-violet-100">
    <h3>Crear Producto</h3>
    <form action='api/products' method="POST">

      <label for="id">Id:</label>
      <input type="number" name="id" required>

      <label for="title">Title:</label>
      <input type="text" name="title" required>

      <label for="description">Description:</label>
      <input type="text" name="description" required>

      <label for="category">Category:</label>
      <input type="text" name="category">


      <label for="price">Price:</label>
      <input type="number" name="price" required>

      <label for=" thumbnail">Thumbnail:</label>
      <input type="text" name="thumbnail" required>

      <label for="code">Code:</label>
      <input type="number" name="code" required>

      <label for="stock">stock:</label>
      <input type="number" name="stock" required>

      <input type="submit" id="button" value="Crear Producto">

    </form>
  </article>
</div>

<div class="contenedor-lista- pico-background-violet-100">

  <h2>Lista de productos</h2>

  <div class="titulos">
    <p>ID</p>
    <p>TITLE</p>
    <p>description</p>
    <p>Precio</p>
    <p>img</p>
    <p>code</p>
    <p>stock</p>
    <p>a침adir</p>
  </div>

  <div class="contenedor-items">
    {{#each listProducts}}
    <div class="contenedor-producto">
      <span>Nro:{{id}}</span>
      <h2>{{title}}</h2>
      <span>{{description}}</span>
      <p>$ {{price}}</p>
      <span>{{thumbnail}}</span>
      <p>{{code}}</p>
      <p>{{stock}}</p>

      <!-- Bot칩n "Agregar al carrito" con atributo data-idProducto -->
      <button class="btn-agregar-carrito" data-cartId="{{../cartId}}" data-idProducto="{{_id}}">Agregar</button>
    </div>
    {{/each}}
  </div>

</div>

<script>


    document.getElementById('deleteForm').addEventListener('submit', function (event) {
      event.preventDefault();  // Prevenir el env칤o est치ndar del formulario
      const deleteId = document.getElementById('deleteId').value;
      const actionUrl = `/api/product/${deleteId}`;

      fetch(actionUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      })
        .then(response => response.json())
        .then(data => {
          // Maneja la respuesta del servidor
          console.log(data);
        })
        .catch(error => {
          console.error('Error:', error);
        });
    });



  document.addEventListener('DOMContentLoaded', () => {
    // Selecciona todos los botones con la clase .btn-agregar-carrito
    const botonesAgregarCarrito = document.querySelectorAll('.btn-agregar-carrito');

    console.log(' botonesAgregarCarrito es: ',botonesAgregarCarrito)

    // Agrega un manejador de eventos a cada bot칩n
    botonesAgregarCarrito.forEach((button) => {
      button.addEventListener('click', async (event) => {
        // Evitar el comportamiento por defecto del bot칩n
        event.preventDefault();

        const cartId = button.getAttribute('data-cartId');
        console.log(' capture  cartId es: ',cartId)
        const productId = button.getAttribute('data-idProducto');
        console.log(' capture  productId es: ',productId)
        const url = `api/carts/${cartId}/product/${productId}`;

        console.log('url es ', url)

        try {
          const response = await fetch(url, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            }
          });

          if (!response.ok) {
            throw new Error('Error al agregar el producto al carrito');
          }


          window.location.href = '/profile'; 

          const data = await response.json();
          console.log('Producto agregado al carrito:', data);

        } catch (error) {
          console.error('Error:', error);
        }
      });
    });
  });
</script>
